# predict if a passanger would survive the titanic
# output should be to gender_submission.csv
library(tidyverse)

# read the train/test data in
train <- read.csv('data/train.csv')
test <- read.csv('data/test.csv')

# bind rows
# ensure that no scaling occurs at this point
# need to prevent train/test leakage


# NOTE
# THIS IS NOT GOOD PRACTICE AND SHOULD BE DONE WITH CAUTION
# IDEALLY THE AUGMENTATION APPLIED TO TRAIN SHOULD BE REPEATED TO TEST SEPERATELY
# TRAIN AND TEST SHOULD NOT BE AWARE OF EACH OTHERS' EXISTANCE
# LEAKAGE MAY CAUSE OVERFITTING ESP. SINCE WE DON'T HAVE A CV SET HERE
data <- dplyr::bind_rows(train, test) # bind rows, ignoring differences in cols

##### EXPLORATORY DATA ANALYSIS #####
# view the data
head(data)

# convert categorical 'Sex' variable to binary
unique(data$Sex)
# TODO: a better way of doing this
data[,"Sex"] <- sapply(data[,"Sex"],switch,"male"=0,"female"=1)

# how many unique values do we have in each column?
lapply(data, function(x) length(unique(x)))

# what are the unique values in columns not including PassengerId
lapply(data[-which(names(data) %in% c("PassengerId", "Name", "Ticket",
                                              "Age", "Fare", "Cabin"))], 
             function(x) unique(x))

# count NAs in each column
lapply(data, function(x) sum(is.na(x)))

